<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD com.example.Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.cmic.attendance.dao.EmployeeScoreDao">
    <sql id="employeeScoreColumns">
        a.score_id AS "scoreId",
        a.username AS "username",
        a.phone AS "phone",
        a.month AS "month",
        a.total AS "total",
        a.timeliness AS "timeliness",
        a.specification AS "specification",
        a.code_quality AS "codeQuality",
        a.workload AS "workload",
        a.Quality_management AS "qualityManagement",
        a.attendance AS "attendance",
        a.responsibility AS "responsibility",
        a.flag AS "flag",
        a.enter_id AS "enterId",
        a.enterprise_department AS "enterpriseDepartment",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",
        a.create_by AS "createBy.id",
        a.update_by AS "updateBy.id",
        a.remarks AS "remarks",
        a.employ_group AS "group"
    </sql>

    <sql id="employeeScoreJoins">
    </sql>

    <select id="get" resultType="EmployeeScore">
        SELECT
        <include refid="employeeScoreColumns"/>
        FROM t_employee_score a
        <include refid="employeeScoreJoins"/>
        WHERE a.score_id = #{scoreId}
    </select>

    <select id="getEmployeeScoreByPhoneAndMonth" resultType="EmployeeScore">
        SELECT
        <include refid="employeeScoreColumns"/>
        FROM t_employee_score a
        <include refid="employeeScoreJoins"/>
        WHERE a.phone = #{phone}
        and a.month = #{month}
    </select>

    <select id="getEmployeeByGroup" parameterType="com.cmic.attendance.model.EmployeeScore"
            resultType="java.util.HashMap" >
        SELECT * FROM t_employee a
        LEFT JOIN
        (SELECT * FROM ( SELECT * FROM t_employee_score WHERE  `month`=#{month}) temp) list_B
        ON a.telephone = list_B.`phone`
        <if test="group != null  and group != ''">
        WHERE a.`project_name`=#{group}
        </if>
        <if test="status == 1">
            AND list_B.total>0
        </if>
        <if test="status == 2">
            AND list_B.total IS NULL
        </if>
        order by a.id
    </select>



    <select id="findList" resultType="EmployeeScore">
        SELECT
        <include refid="employeeScoreColumns"/>
        FROM t_employee_score a
        <include refid="employeeScoreJoins"/>
        <where>
            1 = 1
            <if test="scoreId != null">
                AND a.score_id = #{scoreId}
            </if>
            <if test="phone != null">
                AND a.phone = #{phone}
            </if>
        </where>
    </select>

    <select id="findAllList" resultType="EmployeeScore">
        SELECT
        <include refid="employeeScoreColumns"/>
        FROM t_employee_score a
        <include refid="employeeScoreJoins"/>
    </select>

    <insert id="insert">
        INSERT INTO t_employee_score(
        score_id,
        username,
        phone,
        month,
        total,
        timeliness,
        specification,
        code_quality,
        workload,
        Quality_management,
        attendance,
        responsibility,
        flag,
        enter_id,
        enterprise_department,
        create_date,
        update_date,
        create_by,
        update_by,
        remarks,
        employ_group
        ) VALUES (
        #{scoreId},
        #{username},
        #{phone},
        #{month},
        #{total},
        #{timeliness},
        #{specification},
        #{codeQuality},
        #{workload},
        #{qualityManagement},
        #{attendance},
        #{responsibility},
        #{flag},
        #{enterId},
        #{enterpriseDepartment},
        #{createDate},
        #{updateDate},
        #{createBy.id},
        #{updateBy.id},
        #{remarks},
        #{group}
        )
    </insert>

    <update id="update">
        UPDATE t_employee_score SET
        total = #{total},
        timeliness = #{timeliness},
        specification = #{specification},
        code_quality = #{codeQuality},
        workload = #{workload},
        Quality_management = #{qualityManagement},
        attendance = #{attendance},
        responsibility = #{responsibility},
        flag = #{flag},
        enter_id = #{enterId},
        enterprise_department = #{enterpriseDepartment},
        create_date = #{createDate},
        update_date = #{updateDate},
        create_by = #{createBy.id},
        update_by = #{updateBy.id},
        remarks = #{remarks}
        WHERE score_id = #{scoreId}
    </update>

    <update id="dynamicUpdate">
        UPDATE t_employee_score SET
        <if test="username != null  and username != ''">
            username = #{username},
        </if>
        <if test="phone != null  and phone != ''">
            phone = #{phone},
        </if>
        <if test="month != null  and month != ''">
            month = #{month},
        </if>
        <if test="total != null ">
            total = #{total},
        </if>
        <if test="timeliness != null ">
            timeliness = #{timeliness},
        </if>
        <if test="specification != null ">
            specification = #{specification},
        </if>
        <if test="codeQuality != null ">
            code_quality = #{codeQuality},
        </if>
        <if test="workload != null ">
            workload = #{workload},
        </if>
        <if test="qualityManagement != null ">
            Quality_management = #{qualityManagement},
        </if>
        <if test="attendance != null ">
            attendance = #{attendance},
        </if>
        <if test="responsibility != null ">
            responsibility = #{responsibility},
        </if>
        <if test="flag != null ">
            flag = #{flag},
        </if>
        <if test="enterId != null  and enterId != ''">
            enter_id = #{enterId},
        </if>
        <if test="enterpriseDepartment != null  and enterpriseDepartment != ''">
            enterprise_department = #{enterpriseDepartment},
        </if>
        phone = #{phone}

        WHERE score_id = #{scoreId}
    </update>

    <delete id="delete">
        DELETE FROM t_employee_score
        WHERE score_id = #{scoreId}
    </delete>
</mapper>