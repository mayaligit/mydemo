<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD com.example.Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.cmic.attendance.dao.AttendanceDao">
    <sql id="attendanceColumns">
        a.id AS "id",
        a.attendance_user AS "attendanceUser",
        a.start_time AS "startTime",
        a.end_time AS "endTime",
        a.attendance_status AS "attendanceStatus",
        a.attendance_desc AS "attendanceDesc",
        a.attendance_month AS "attendanceMonth",
        a.start_location AS "startLocation",
        a.end_location AS "endLocation",
        a.start_signal AS "startSignal",
        a.end_signal AS "endSignal",
        a.daily_status AS "dailyStatus",
        a.attendance_group AS "attendanceGroup",
        a.end_time_status AS "endTimeStatus",
        a.start_time_status AS "startTimeStatus",
        a.attendance_card_status AS "attendanceCardStatus",
        a.attendance_longitude_start AS "attendanceLongitudeStart",
        a.attendance_dimension_start AS "attendanceDimensionStart",
        a.attendance_longitude_end AS "attendanceLongitudeEnd",
        a.attendance_dimension_end AS "attendanceDimensionEnd",
        a.attendance_work_time AS "attendanceWorkTime",
        a.remarks AS "remarks",
        a.create_by AS "createBy.id",
        a.create_date AS "createDate",
        a.update_by AS "updateBy.id",
        a.update_date AS "updateDate"
    </sql>

    <sql id="attendanceJoins">
    </sql>

    <select id="get" resultType="Attendance">
        SELECT
        <include refid="attendanceColumns"/>
        FROM t_attendance a
        <include refid="attendanceJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Attendance">
        SELECT
        <include refid="attendanceColumns"/>
        FROM t_attendance a
        <include refid="attendanceJoins"/>
        <where>
            1 = 1
            <if test="id != null">
                AND a.id LIKE CONCAT('%',#{id, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="attendanceUser != null">
                AND a.attendance_user LIKE CONCAT('%',#{attendanceUser, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="startTime != null">
                AND a.start_time LIKE CONCAT('%',#{startTime, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="endTime != null">
                AND a.end_time LIKE CONCAT('%',#{endTime, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="attendanceStatus != null">
                AND a.attendance_status LIKE CONCAT('%',#{attendanceStatus, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="attendanceDesc != null">
                AND a.attendance_desc LIKE CONCAT('%',#{attendanceDesc, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="attendanceMonth != null">
                AND a.attendance_month LIKE CONCAT('%',#{attendanceMonth, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="startLocation != null">
                AND a.start_location LIKE CONCAT('%',#{startLocation, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="endLocation != null">
                AND a.end_location LIKE CONCAT('%',#{endLocation, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="startSignal != null">
                AND a.start_signal LIKE CONCAT('%',#{startSignal, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="endSignal != null">
                AND a.end_signal LIKE CONCAT('%',#{endSignal, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="dailyStatus != null">
                AND a.daily_status LIKE CONCAT('%',#{dailyStatus, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="attendanceGroup != null">
                AND a.attendance_group LIKE CONCAT('%',#{attendanceGroup, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="endTimeStatus != null">
                AND a.end_time_status LIKE CONCAT('%',#{endTimeStatus, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="startTimeStatus != null">
                AND a.start_time_status LIKE CONCAT('%',#{startTimeStatus, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="createBy.id != null">
                AND a.create_by LIKE CONCAT('%',#{createBy.id, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="createDate != null">
                AND a.create_date LIKE CONCAT('%',#{createDate, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="updateBy.id != null">
                AND a.update_by LIKE CONCAT('%',#{updateBy.id, typeHandler=EscapeTypeHandler},'%')
            </if>
            <if test="updateDate != null">
                AND a.update_date LIKE CONCAT('%',#{updateDate, typeHandler=EscapeTypeHandler},'%')
            </if>
        </where>
    </select>

    <select id="findAllList" resultType="Attendance">
        SELECT
        <include refid="attendanceColumns"/>
        FROM t_attendance a
        <include refid="attendanceJoins"/>
    </select>

    <insert id="insert">
        INSERT INTO t_attendance(
            id,
            attendance_user,
            start_time,
            end_time,
            attendance_status,
            attendance_desc,
            attendance_month,
            start_location,
            end_location,
            start_signal,
            end_signal,
            daily_status,
            attendance_group,
            end_time_status,
            start_time_status,
            attendance_card_status,
            attendance_longitude_start,
            attendance_dimension_start,
            attendance_longitude_end,
            attendance_dimension_end,
            attendance_work_time,
            remarks,
            create_by,
            create_date,
            update_by,
            update_date
        ) VALUES (
            #{id},
            #{attendanceUser},
            #{startTime},
            #{endTime},
            #{attendanceStatus},
            #{attendanceDesc},
            #{attendanceMonth},
            #{startLocation},
            #{endLocation},
            #{startSignal},
            #{endSignal},
            #{dailyStatus},
            #{attendanceGroup},
            #{endTimeStatus},
            #{startTimeStatus},
            #{attendanceCardStatus},
            #{attendanceLongitudeStart},
            #{attendanceDimensionStart},
            #{attendanceLongitudeEnd},
            #{attendanceDimensionEnd},
            #{attendanceWorkTime},
            #{remarks},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate}
        )
    </insert>

    <update id="update">
        UPDATE t_attendance SET
        attendance_user = #{attendanceUser},
        start_time = #{startTime},
        end_time = #{endTime},
        attendance_status = #{attendanceStatus},
        attendance_desc = #{attendanceDesc},
        attendance_month = #{attendanceMonth},
        start_location = #{startLocation},
        end_location = #{endLocation},
        start_signal = #{startSignal},
        end_signal = #{endSignal},
        daily_status = #{dailyStatus},
        attendance_group = #{attendanceGroup},
        end_time_status = #{endTimeStatus},
        start_time_status = #{startTimeStatus},
        attendance_card_status = #{attendanceCardStatus},
        attendance_longitude_start = #{attendanceLongitudeStart},
        attendance_dimension_start = #{attendanceDimensionStart},
        attendance_longitude_end = #{attendanceLongitudeEnd},
        attendance_dimension_end = #{attendanceDimensionEnd},
        attendance_work_time = #{attendanceWorkTime},
        remarks = #{remarks},
        update_by = #{updateBy.id},
        update_date = #{updateDate}
        WHERE id = #{id}
    </update>

    <update id="dynamicUpdate">
        UPDATE t_attendance SET
        <if test="attendanceUser != null  and attendanceUser != ''">
            attendance_user = #{attendanceUser},
        </if>
        <if test="startTime != null ">
            start_time = #{startTime},
        </if>
        <if test="endTime != null ">
            end_time = #{endTime},
        </if>
        <if test="attendanceStatus != null  and attendanceStatus != ''">
            attendance_status = #{attendanceStatus},
        </if>
        <if test="attendanceDesc != null  and attendanceDesc != ''">
            attendance_desc = #{attendanceDesc},
        </if>
        <if test="attendanceMonth != null  and attendanceMonth != ''">
            attendance_month = #{attendanceMonth},
        </if>
        <if test="startLocation != null  and startLocation != ''">
            start_location = #{startLocation},
        </if>
        <if test="endLocation != null  and endLocation != ''">
            end_location = #{endLocation},
        </if>
        <if test="startSignal != null  and startSignal != ''">
            start_signal = #{startSignal},
        </if>
        <if test="endSignal != null  and endSignal != ''">
            end_signal = #{endSignal},
        </if>
        <if test="dailyStatus != null ">
            daily_status = #{dailyStatus},
        </if>
        <if test="attendanceGroup != null  and attendanceGroup != ''">
            attendance_group = #{attendanceGroup},
        </if>
        <if test="endTimeStatus != null  and endTimeStatus != ''">
            end_time_status = #{endTimeStatus},
        </if>
        <if test="startTimeStatus != null  and startTimeStatus != ''">
            start_time_status = #{startTimeStatus},
        </if>
        <if test="attendanceCardStatus != null  and attendanceCardStatus != ''">
            attendance_card_status = #{attendanceCardStatus},
        </if>
        <if test="attendanceLongitude != null  and attendanceLongitude != ''">
            attendance_longitude = #{attendanceLongitude},
        </if>
        <if test="attendanceDimension != null  and attendanceDimension != ''">
            attendance_dimension = #{attendanceDimension},
        </if>
        <if test="attendanceWorkTime != null ">
            attendance_work_time = #{attendanceWorkTime},
        </if>
        update_by = #{updateBy.id},
        update_date = #{updateDate}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM t_attendance
        WHERE id = #{id}
    </delete>

    <update id="updateAttendance">
        UPDATE t_attendance SET
        <if test="dailyStatus != null and dailyStatus != ''">
            daily_status = #{dailyStatus},
        </if>
        <if test="updateTime != null and updateTime != ''">

            update_date= #{updateDate,jdbcType=TIMESTAMP}
        </if>
        WHERE attendance_id = #{attendanceId}
    </update>

    <select id="checkAttendanceByDay" parameterType="com.cmic.attendance.pojo.AttendancePojo"  resultType="Map">
        SELECT
        DATE_FORMAT(a.start_time,'%Y-%m-%d %H:%i') AS "startTime",
        a.attendance_user AS "userName"
        FROM t_attendance a
        WHERE
            1=1 AND a.start_time IS NOT NULL
            and  date_format(a.start_time, '%Y-%m-%d') = #{date}
            AND a.attendance_group = #{attendanceGroup}
    </select>
    <select id="getAttendanceByCreatebyAndCreateTime" resultType="Attendance">
        SELECT
        <include refid="attendanceColumns"/>
        FROM t_attendance a
        <include refid="attendanceJoins"/>
        WHERE a.create_by = #{createBy} AND DATE(a.create_date)=#{createDate}
    </select>
    <select id="checkAttendanceLatterByDay" parameterType="com.cmic.attendance.pojo.AttendancePojo" resultType="java.util.HashMap">
        SELECT
        DATE_FORMAT(b.start_time,'%Y-%m-%d %H:%i') AS "startTime",
        a.username AS "userName"
        FROM t_statistics a,t_attendance b
        WHERE 1=1
        AND a.create_by = b.create_by
        AND a.late_time = 1
        AND DATE(a.update_date) = #{date}
        AND DATE(b.update_date) = #{date}
        AND a.attendance_group = #{attendanceGroup}
    </select>

    <select id="getWorkCount" parameterType="com.cmic.attendance.pojo.AttendancePojo" resultType="int">
        SELECT
        COUNT(a.`id`) workCount
        FROM t_attendance a
        WHERE a.`start_time` IS NOT NULL
        and DATE(a.`start_time`) = #{date}
        AND a.attendance_group = #{attendanceGroup}
    </select>


    <select id="getLatterCount" parameterType="com.cmic.attendance.pojo.StatisticsPojo" resultType="int">
        SELECT COUNT(id)
        FROM t_statistics a
        WHERE 1=1 AND a.late_time = 1
        AND DATE(a.update_date) = #{date}
        AND a.attendance_group = #{attendanceGroup}
    </select>

    <select id="getOutworkCount" parameterType="com.cmic.attendance.pojo.AttendancePojo" resultType="int">
        SELECT
        COUNT(a.`id`) outworkCount
        FROM t_attendance a
        WHERE 1 = 1
        and a.attendance_status = "2"
        and DATE(a.`update_date`) = #{date}
        AND a.attendance_group = #{attendanceGroup}
    </select>

    <select id="selectAttendances" parameterType="attendance" resultType="map">
        SELECT
            a.id AS "id",
            a.attendance_user AS "attendanceUser",
            date_format(a.start_time,'%Y-%m-%d %H:%i') AS "startTime",
            date_format(a.end_time,'%Y-%m-%d %H:%i') AS "endTime",
            a.attendance_status AS "attendanceStatus",
            a.daily_status AS "dailyStatus",
            a.start_time_status AS "startTimeStatus",
            a.end_time_status AS "endTimeStatus",
            a.attendance_desc AS "attendanceDesc",
             date_format(a.create_date,'%Y-%m-%d %H:%i') AS "createTime",
            b.daily_desc AS "dailyDesc"
        FROM
            t_attendance a
            LEFT JOIN t_daily b ON a.id=b.attendance_id
        <where>
            <if test="attendanceUser != null and attendanceUser != ''">
                attendance_user = #{attendanceUser}
            </if>
            <if test="attendanceStatus != null and attendanceStatus != ''">
                and attendance_status = #{attendanceStatus}
            </if>
            <if test="attendanceMonth != null and attendanceMonth != ''">
                and  attendance_month = #{attendanceMonth}
            </if>
            <if test="dailyStatus != null and dailyStatus != ''">
                and  daily_status = #{dailyStatus}
            </if>
            <if test="attendanceGroup != null and attendanceGroup != ''">
                and  a.attendance_group = #{attendanceGroup}
            </if>
        </where>
    </select>

    <select id="findAttendanceList" parameterType="map" resultType="Map">
       SELECT a.id ,a.attendance_status AS "attendanceStatus" , a.daily_status AS "dailyStatus" ,
               DATE_FORMAT(a.create_date ,'%m月%d日') AS "createTime" , b.office_time/60 AS "officeTime" ,
               DATE_FORMAT(a.create_date ,'%d') AS "order"
       FROM t_attendance a,t_statistics b
       WHERE a.create_by=b.create_by AND DATE_FORMAT(a.create_date,'%Y-%m-%d') = DATE_FORMAT(b.create_date,'%Y-%m-%d')
              AND a.attendance_month = #{attaendanceMonth} AND a.create_by=#{createBy}
    </select>

    <resultMap id="attendanceMap" type="Attendance">
        <id column="id" property="id" />
        <result column="attendanceStatus" property="attendanceStatus"/>
        <result column="createTime" property="createTime"/>
        <result column="attendanceDesc" property="attendanceDesc"/>
        <result column="dailyStatus" property="dailyStatus"/>
        <association property="audit" javaType="Audit">
            <id column="auditId" property="id"/>
        </association>
        <association property="daily" javaType="Daily">
            <id column="dailyId" property="id"/>
            <result column="dailyTitle" property="dailyTitle"/>
        </association>
    </resultMap>

    <select id="selectExportAttendanceData" parameterType="attendance" resultType="map">
        SELECT
        a.id AS "id",
        a.attendance_user AS "attendanceUser",
        a.start_time AS "startTime",
        a.end_time AS "endTime",
        a.attendance_status AS "attendanceStatus",
        a.start_location AS "startLocation",
        a.end_location AS "endLocation",
        a.daily_status AS "dailyStatus"
        FROM
        t_attendance a
        <where>
            <if test="attendanceUser != null and attendanceUser != ''">
                attendance_user = #{attendanceUser}
            </if>
            <if test="attendanceStatus != null and attendanceStatus != ''">
                and attendance_status = #{attendanceStatus}
            </if>
            <if test="attendanceMonth != null and attendanceMonth != ''">
                and  attendance_month = #{attendanceMonth}
            </if>
            <if test="dailyStatus != null and dailyStatus != ''">
                and  daily_status = #{dailyStatus}
            </if>
        </where>
    </select>

    <!--固定模式 迟到次数-->
    <select id="getLates" resultType="Integer">
        SELECT
        count(*)
        FROM t_attendance a
        <where>
            1 = 1
            <if test="phone != null">
                AND a.create_by = #{phone}
            </if>
            <if test="userName != null">
                AND a.attendance_user = #{userName}
            </if>
            <if test="month != null">
                AND a.attendance_month = #{month}
            </if>
            AND a.attendance_status='0'
            AND DATE_FORMAT(a.start_time,'%H%i%s')>90000
        </where>
    </select>

    <!--固定模式 早退次数-->
    <select id="getLeaveEarly" resultType="Integer">
        SELECT
        count(*)
        FROM t_attendance a
        <where>
            1 = 1
            <if test="phone != null">
                AND a.create_by = #{phone}
            </if>
            <if test="userName != null">
                AND a.attendance_user = #{userName}
            </if>
            <if test="month != null">
                AND a.attendance_month = #{month}
            </if>
            AND a.attendance_status='0'
            AND DATE_FORMAT(a.end_time,'%H%i%s')&lt;180000
        </where>
    </select>

    <select id="getAttendanceDays" resultType="Integer">
        SELECT
        count(*)
        FROM t_attendance a
        <where>
            1 = 1
            <if test="phone != null">
                AND a.create_by = #{phone}
            </if>
            <if test="userName != null">
                AND a.attendance_user = #{userName}
            </if>
            <if test="month != null">
                AND a.attendance_month = #{month}
            </if>
            AND a.attendance_status='0'
        </where>
    </select>


</mapper>
